@page "/login"


@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService

@using A2Test2.Authentication
@using A2Test2.Repository
@using A2Test2.DTOs



<AuthorizeView>
    <Authorized>
        <div class="container bg-dark rounded p-4 border-top border-bottom border-primary mb-lg-5">
            <p>You've already logged in! <a href="/">Return home</a></p>

        </div>
    </Authorized>
    <NotAuthorized>

        <div class="container bg-dark rounded p-4 border-top border-bottom border-primary mb-lg-5">
            <h3>Login</h3>

            <EditForm  Context="logincontext" Model="userInfo" OnValidSubmit="CreateUser">
            <DataAnnotationsValidator />

            <p style="color: red;">@failureMessage</p>

            <div class="form-group">
                <label>Username:</label>
                <div>
                    <InputText class="form-control" @bind-Value="@userInfo.Username" />
                    <ValidationMessage For="@(() => userInfo.Username)" />
                </div>
            </div>

            <div class="form-group">
                <label>Password:</label>
                <div>
                    <InputText type="password" class="form-control" @bind-Value="@userInfo.Password" />
                    <ValidationMessage For="@(() => userInfo.Password)" />
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Login</button>

        </EditForm>
        </div>

    </NotAuthorized>
</AuthorizeView>



@code {
    private UserInfo userInfo = new UserInfo();

    private string failureMessage = "";

    private async Task CreateUser()
    {
        failureMessage = "";
        var userToken = await accountsRepository.Login(userInfo);

        if (userToken.Token == "failed")
        {
            failureMessage = "The username or password is incorrect.";
            StateHasChanged();
            return;
        }

        await loginService.Login(userToken.Token);
        navigationManager.NavigateTo("");
    }
}